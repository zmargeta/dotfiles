#!/bin/bash

source "${HOME}/.local/share/chezmoi/lib/libcore.sh"

trap '(exit 130)' INT
trap '(exit 143)' TERM
trap 'rc=$?; handler $rc; exit $rc' EXIT

readonly DOT_TEMPDIR="$(mktemp -d)"
readonly DOT_LOGFILE="$(mktemp /tmp/install_sdks_log.XXXXXX)"

main() {
  tput civis
  if ! find_cmd 'asdf'; then
    info 'Skipping installation, asdf not found'
    return 0
  fi
  if ! install_plugins; then
    return 1
  fi
  if ! install_sdks; then
    return 1
  fi
  if cnfm 'Set global SDK versions?' && ! set_global_sdks; then
    return 1 
  fi
  tput cnorm
}

{{- $plugins := dict
    "java" "https://github.com/halcyon/asdf-java.git" }}

{{- if .personal }}
{{- $plugins = merge $plugins (dict
    "groovy" "https://github.com/weibemoura/asdf-groovy.git"
    "kotlin" "https://github.com/asdf-community/asdf-kotlin.git"
    "python" "https://github.com/danhper/asdf-python.git"
    "rust" "https://github.com/code-lever/asdf-rust.git"
    "scala" "https://github.com/asdf-community/asdf-scala.git") }}
{{- end }}

{{- $sdks := dict
    "java" "temurin-19.0.0+36" }}

{{- if .personal }}
{{- $sdks = merge $sdks (dict
    "groovy" "4.0.9"
    "kotlin" "1.9.0"
    "python" "3.10.7"
    "rust" "1.65.0"
    "scala" "3.2.0") }}
{{- end }}

install_plugins() {
  DOT_WAIT_FLT=1 wait_strt 'Installing asdf plugins'
  local rc=0
  {{ range (keys $plugins | sortAlpha | uniq) -}}
  asdf plugin add {{ . }} {{ get $plugins . }} >> "${DOT_LOGFILE}" 2>&1
  rc=$?
  if (( $rc != 0 )) && (( $rc != 2 )); then
    DOT_WAIT_FLT=1 wait_fail 'Installing asdf plugins, failed'
    return 1
  fi
  {{ end -}}
  DOT_WAIT_FLT=1 wait_succ 'Installing asdf plugins, done'
  return 0
}

install_sdks() {
  DOT_WAIT_FLT=1 wait_strt 'Installing SDKs'
  {{ range (keys $sdks | sortAlpha | uniq) -}}
  asdf install {{ . }} "{{ get $sdks . }}" >> "${DOT_LOGFILE}" 2>&1
  if (( $? != 0 )); then
    DOT_WAIT_FLT=1 wait_fail 'Installing SDKs, failed'
    return 1
  fi
  {{ end -}}
  DOT_WAIT_FLT=1 wait_succ 'Installing SDKs, done'
  return 0
}

set_global_sdks() {
  DOT_WAIT_FLT=1 wait_strt 'Setting global SDK versions'
  {{ range (keys $sdks | sortAlpha | uniq) -}}
  asdf global {{ . }} "{{ get $sdks . }}" >> "${DOT_LOGFILE}" 2>&1
  if (( $? != 0 )); then
    DOT_WAIT_FLT=1 wait_fail 'Setting global SDK versions, failed'
    return 1
  fi
  {{ end -}}
  DOT_WAIT_FLT=1 wait_succ 'Setting global SDK vesions, done'
  return 0
}

main "$@"

